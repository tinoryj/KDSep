[config]
bloomBits = 10
seekCompaction = false
compression = false
directIO = true
fakeDirectIO = false 
blockCache = 1073741824 
sizeRatio = 10
gcSize = 0
memtable = 67108864
noCompaction = false
smallThresh = 128
numThreads = 8
midThresh = 8192
gcRatio = 0.3
preheat = false
mergeLevel = 1
gcLevel = 2
runGC = true
gcWB = false
tiered = false
levelMerge = true
rangeMerge = true
lazyMerge = true
sepBeforeFlush = true
maxSortedRuns = 10
blockWriteSize = 0
intraCompaction = false
keyValueSeparation = false 
keyDeltaSeparation = false 
blobDbKeyValueSeparation = true 
targetFileSizeBase = 65536
blobFileSize = 65536
deltaLogFileSize = 1048576
deltaLogFileFlushSize = 4096
deltaLogGCThreshold = 0.8
deltaLogSplitGCThreshold = 0.4
deltaLogCacheObjectNumber = 5263440 
deltaLogMaxFileNumber = 262144
deltaStore_operationNumberForMetadataCommitThreshold_ =  10000
deltaStore_operationNumberForForcedGCThreshold_ = 1000
deltaStore_thread_number_limit_ = 3
deltaStoreEnableGC = false
enableBatchedOperations = false
deltaStoreWriteBackDuringReadsThreshold = 5
deltaStoreWriteBackDuringGCThreshold = 5
deltaKVWriteBatchSize = 5

[debug]
level = 1 
scanAllRecordsUponStop = false 

[basic]
; size of main segments
mainSegmentSize = 1048576
; size of log segments
logSegmentSize = 8192 
; number of main segments
numMainSegment = 5200 
; number of log segments
numLogSegment = 0 
; number of retry before declaring failure 
retryMax = 3
; whether to store segments on a file system
segmentAsFile = 1
; whether to store each segment in a separate file
separateSegmentFile = 0

[buffer]
; size of write cache: should be zero
updateKVBufferSize = 0 
; whether to perform in-place update in write cache
inPlaceUpdate = 1
directIO = 1 
numPipelinedBuffer = 2
testDirectIO = 0 
testIODelayUs = 0 
valueCacheSize = 856320

[hotness]
; whether to enable separate cold storage
coldVLog = 0
; size of the cold storage
coldStorageSize = 314572800
; name of the cold storage (file)
coldStorageDevice =

[key]
; directory where leveldb should run in
lsmTreeDir = leveldb
; type of LSM-tree implementation to use: 0 LevelDB
useDB = 0
; whether to enable compression in the LSM-tree implementation
useCompression = 0

[logmeta]
; whether to log segment table or log tail/head persistently to LSM-tree
persist = 1

[gc]
; max number of groups selected in each GC operation
greedyGCSize = 1
; number of read threads to prefetch segments during GC
numReadThread = 8

[kvsep]
; minimum size of value to perform KV separation
minValueSizeToLog = 0
; whether to total disable KV separation
disabled = 0

[vlog]
; whether to run in vLog mode
enabled = 1
; unit size to scan in each GC
gcSize = 1048576 

[consistency]
; whether to enable crash consistency mechanisms
crashProtected = 0

[misc]
hashTableDefaultSize = 1048576
hashMethod = 0
; max number of parallel segments to buffer for parallel writes
numParallelFlush = 32
; max number of parallel I/O threads performing writes during write cache flush
numIoThread = 32
syncAfterWrite = 0
; max number of threads for range scan
numRangeScanThread = 1
; whether to perform read-ahead during scan
enableScanReadAhead = 1
; batch write threshold
writeBatchSize = 4096
enableMmap = 0
maxOpenFiles = -1

